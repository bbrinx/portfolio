{"version":3,"sources":["components/CustomLink.tsx","components/Footnote.tsx","components/ReferenceColumn.tsx","features/Header.tsx","features/ResumeText.tsx","resources.ts","App.tsx","theme.ts","serviceWorker.ts","index.tsx"],"names":["linkStyles","css","textDecoration","content","opacity","position","transform","transition","CustomLink","props","big","url","children","fontSize","fontWeight","fontFamily","color","undefined","Link","href","Footnote","id","date","title","detail","tools","onClick","active","Grid","templateColumns","gap","mb","Text","Boolean","length","join","ReferenceColumn","footnotes","activeIndex","isColumnActive","Box","Heading","as","size","map","footnote","Header","Flex","alignItems","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","pb","justifyContent","flex","mr","textTransform","ResumeText","text","link","pr","experience","projects","texts","App","useState","footnoteId","setFootnoteId","p","pt","colors","customTheme","theme","main","Math","floor","random","fonts","heading","body","mono","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","CSSReset","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3e9cd17.chunk.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"@chakra-ui/core\";\n\ntype Props = {\n  url: string;\n  children?: React.ReactNode;\n  big?: boolean;\n};\n\nconst linkStyles = css({\n  \"&:hover\": {\n    textDecoration: \"none\",\n  },\n  \"&:after\": {\n    content: `\"\\u2192\"`,\n    opacity: 0,\n    position: \"absolute\",\n    transform: \"translate(-10%, 0)\",\n    transition: \"all 0.2s\",\n  },\n  \"&:hover:after\": {\n    opacity: 1,\n    transform: \"translate(30%, 0)\",\n  },\n});\n\nfunction CustomLink(props: Props) {\n  const { big, url, children } = props;\n  const fontSize = big ? \"4xl\" : \"xs\";\n  const fontWeight = big ? \"medium\" : \"thin\";\n  const fontFamily = big ? \"body\" : \"mono\";\n  const color = big ? \"main\" : undefined;\n\n  return (\n    <Link\n      href={url}\n      fontFamily={fontFamily}\n      fontSize={fontSize}\n      fontWeight={fontWeight}\n      css={linkStyles}\n      color={color}\n    >\n      {children}\n    </Link>\n  );\n}\n\nexport default CustomLink;\n","import React from \"react\";\nimport { Link, Grid, Text } from \"@chakra-ui/core\";\nimport { FootnoteType } from \"./types\";\n\ntype Props = {\n  content: FootnoteType;\n  active: boolean;\n  onClick: (footnoteId: number) => void;\n};\n\nfunction Footnote(props: Props) {\n  const {\n    content: { id, date, title, detail, tools },\n    onClick,\n    active,\n  } = props;\n\n  function handleClick() {\n    onClick(id);\n  }\n\n  const color = active ? \"main\" : undefined;\n\n  return (\n    <Grid templateColumns=\"20px 200px\" gap={3} mb={5}>\n      <Text fontSize=\"xs\" fontFamily=\"mono\" color={color}>\n        [{id}]\n      </Text>\n      <Link onClick={handleClick} color={color}>\n        <Text fontSize=\"xs\" fontFamily=\"mono\">\n          {date}\n        </Text>\n        <Text fontSize=\"xs\" fontFamily=\"mono\" fontWeight=\"bold\">\n          {title}\n        </Text>\n        <Text fontSize=\"xs\" fontFamily=\"mono\">\n          {detail}\n        </Text>\n        <Text fontSize=\"xs\" fontFamily=\"mono\">\n          {Boolean(tools?.length) && `[${tools!.join(\",\")}]`}\n        </Text>\n      </Link>\n    </Grid>\n  );\n}\n\nexport default Footnote;\n","import React, { useState } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport Footnote from \"./Footnote\";\nimport { FootnoteType } from \"./types\";\ntype Props = {\n  footnotes: FootnoteType[];\n  activeIndex: number;\n  title: string;\n  onClick: (footnoteId: number) => void;\n  isColumnActive: boolean;\n};\nfunction ReferenceColumn(props: Props) {\n  const { footnotes, activeIndex, onClick, title, isColumnActive } = props;\n\n  return (\n    <Box>\n      <Heading\n        as=\"h3\"\n        size=\"sm\"\n        mb={3}\n        color={isColumnActive ? \"main\" : undefined}\n      >\n        {title}\n      </Heading>\n      {footnotes.map((footnote) => (\n        <Footnote\n          content={footnote}\n          onClick={onClick}\n          active={activeIndex === footnote.id}\n        />\n      ))}\n    </Box>\n  );\n}\n\nexport default ReferenceColumn;\n","import React from \"react\";\nimport { Flex, Heading } from \"@chakra-ui/core\";\nimport { CustomLink as Link } from \"../components\";\n\nfunction Header() {\n  return (\n    <Flex\n      as=\"nav\"\n      alignItems=\"baseLine\"\n      backgroundImage=\"linear-gradient(90deg,#33302d 50%,hsla(0,0%,100%,0) 0)\"\n      backgroundPosition=\"bottom\"\n      backgroundSize=\"8px 1px\"\n      backgroundRepeat=\"repeat-x\"\n      pb={1}\n      justifyContent=\"space-between\"\n    >\n      <Flex alignItems=\"baseLine\" flex=\"6\">\n        <Heading as=\"h1\" size=\"xl\" fontWeight=\"thin\" mr={5}>\n          Jonathan Derin\n        </Heading>\n        <Heading as=\"h3\" size=\"sm\" fontFamily=\"mono\" textTransform=\"uppercase\">\n          Software Engineer\n        </Heading>\n      </Flex>\n      <Flex justifyContent=\"space-between\" flex=\"1\">\n        <Link url=\"https://github.com/bbrinx\">github</Link>\n        <Link url=\"https://www.linkedin.com/in/jonathan-derin\">linkedin</Link>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport { CustomLink as Link } from \"../components\";\n\ntype Props = {\n  text: {\n    id: number;\n    text: string;\n    link?: string;\n  };\n};\n\nfunction ResumeText(props: Props) {\n  const {\n    text: { text, link },\n  } = props;\n  return (\n    <Box pr={24}>\n      <Heading mb={12}>{text}</Heading>\n      {link && (\n        <Link url={link} big>\n          Link\n        </Link>\n      )}\n    </Box>\n  );\n}\n\nexport default ResumeText;\n","export const footnotes = {\n  experience: [\n    {\n      id: 0,\n      date: \"Feb 2019 - Present\",\n      title: \"Loanstreet / New York\",\n      detail: \"Software Engineer\",\n      tools: [\"Typescript\", \"React\", \"Django\"],\n    },\n    {\n      id: 1,\n      date: \"Jan 2018 - Sep 2018\",\n      title: \"Foodly / Berlin\",\n      detail: \"Software Engineer\",\n      tools: [\"React\", \"Node\"],\n    },\n    {\n      id: 2,\n      date: \"Mar 2017 - Aug 2017\",\n      title: \"Decidata / Mexico City\",\n      detail: \"Sofware Engineering Intern\",\n      tools: [\"React\", \"Django\"],\n    },\n    {\n      id: 3,\n      date: \"Oct 2016\",\n      title: \"Deutschland Stipendium\",\n      detail: \"Scholarship Award\",\n      tools: [],\n    },\n    {\n      id: 4,\n      date: \"Oct 2015 - Sep 2018\",\n      title: \"Bachelor of Science\",\n      detail: \"University of Applied Science Berlin\",\n      tools: [\"Java\"],\n    },\n  ],\n\n  projects: [\n    {\n      id: 5,\n      date: \"2017\",\n      title: \"HTW Mapper\",\n      tools: [\"React Native\", \"Java\"],\n    },\n    {\n      id: 6,\n      date: \"2018\",\n      title: \"Textual Analaysis of German Online Media\",\n      tools: [\"NLP\", \"Python\"],\n    },\n    {\n      id: 7,\n      date: \"2018\",\n      title: \"Simple Newsfeed\",\n      tools: [\"React\", \"Node\", \"Express\", \"Scrapy\"],\n    },\n  ],\n};\n\nexport const texts = [\n  {\n    id: 0,\n    text:\n      \"Hi! I'm Jonathan. Currently I'm a software engineer at Loanstreet, a fin-tech startup based in New York.\",\n    link: \"https://www.loan-street.com/\",\n  },\n  {\n    id: 1,\n    text:\n      \"At Foodly, a B2C startup aiming to simplify grocery shoping, I was responsible for expanding the web application, including a recipe editor and step-by-step cooking mode.\",\n    link: \"https://www.getfoodly.com\",\n  },\n  {\n    id: 2,\n    text:\n      \"As part of the development team at Decidata, an ad-tech startup based in Mexico, I worked on a new SPA dashboard, allowing customers to set up a campaign and view performance insights\",\n    link: \"https://www.decidata.tv\",\n  },\n  {\n    id: 3,\n    text:\n      \"While studying, I was awarded the Deutschland Stipendium, a scholarship for high-achieving students.\",\n    link: \"https://www.deutschlandstipendium.de\",\n  },\n  {\n    id: 4,\n    text:\n      \"I moved to Berlin to study international media and computing, a computer science major with a focus on image processing and web development.\",\n    link: \"https://www.htw-berlin.de\",\n  },\n  {\n    id: 5,\n    text:\n      \"Over four months, my team mates and I built a mobile navigation app for our university, allowing users to search for the fastest path to their classroom.\",\n    link: \"https://github.com/bbrinx/cm.bp.htw-mapper\",\n  },\n  {\n    id: 6,\n    text:\n      \"Using Natural Language Processing techniques I researched the effect of the European Refugee Crisis on German media.\",\n    link: \"http://jonathanderin.de/thesis.pdf\",\n  },\n  {\n    id: 7,\n    text:\n      \"The idea behind this newsreader was to build a simple and clean rss reader for my morning news routine (and help me avoid poorly designed websites).\",\n    link: \"https://github.com/bbrinx/newsfeed\",\n  },\n];\n","import React, { useState } from \"react\";\nimport { Box, Grid } from \"@chakra-ui/core\";\nimport { ReferenceColumn } from \"./components\";\nimport { Header, ResumeText } from \"./features\";\nimport { footnotes, texts } from \"./resources\";\n\nfunction App() {\n  const [footnoteId, setFootnoteId] = useState(0);\n\n  return (\n    <Box p={20}>\n      <Header />\n      <Grid templateColumns=\"3fr 1fr 1fr\" gap={5} pt={12}>\n        <ResumeText text={texts[footnoteId]} />\n        <ReferenceColumn\n          footnotes={footnotes.experience}\n          title=\"Experience\"\n          onClick={setFootnoteId}\n          activeIndex={footnoteId}\n          isColumnActive={footnoteId < 5}\n        />\n        <ReferenceColumn\n          footnotes={footnotes.projects}\n          title=\"Projects\"\n          onClick={setFootnoteId}\n          activeIndex={footnoteId}\n          isColumnActive={footnoteId > 5}\n        />\n      </Grid>\n    </Box>\n  );\n}\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\nconst colors = [\n  \"#e09f3e\",\n  \"#9e2a2b\",\n  \"#d9c5b2\",\n  \"#1b998b\",\n  \"#ffd3e8\",\n  \"#f2cc8f\",\n  \"#08b2e3\",\n  \"#f37748\",\n  \"#ffcbdd\",\n  \"#7c0b2b\",\n  \"#fb4b4e\",\n];\n\nconst customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    main: colors[Math.floor(Math.random() * colors.length)],\n  },\n  fonts: {\n    heading: \"Roboto, sans-serif\",\n    body: \"Roboto, sans-serif\",\n    mono: \"Roboto Mono, monospace\",\n  },\n};\n\nexport default customTheme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport customTheme from \"./theme\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={customTheme}>\n      <CSSReset />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}